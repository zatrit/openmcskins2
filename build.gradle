plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'fabric-loom' version '1.1-SNAPSHOT'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url 'https://maven.shedaniel.me/' }
    maven { url 'https://maven.terraformersmc.com/releases/' }
}

dependencies {
    // Shadows and implements dependency
    var shadowImpl = { dep ->
        implementation dep
        shadow dep
    }

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-resource-loader-v0:${project.resource_loader_version}"

    compileOnly "org.projectlombok:lombok:${project.lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"

    shadowImpl "org.apache.commons:commons-text:${project.apache_text_version}"
    shadowImpl project(":skinlib")

    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

processResources {
	inputs.property "version", project.version

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

jar {
    from 'LICENSE'
}

remapJar {
    dependsOn(shadowJar)
    //noinspection GroovyAssignabilityCheck
    inputFile.set shadowJar.archiveFile
}

shadowJar {
    minimize()

    dependencies {
        exclude dependency('org.apache.commons:commons-lang3')
    }

    configurations = [project.configurations.shadow]
    archiveBaseName.set archives_base_name
    archiveClassifier.set 'not-remapped'
}

allprojects {
    java {
        sourceCompatibility = JavaVersion.VERSION_16
        targetCompatibility = JavaVersion.VERSION_17
    }
}